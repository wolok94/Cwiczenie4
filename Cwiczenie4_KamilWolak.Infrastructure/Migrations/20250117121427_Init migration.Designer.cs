// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Cwiczenie4_KamilWolak.Infrastructure.DbConnection;

#nullable disable

namespace Cwiczenie4_KamilWolak.Infrastructure.Migrations
{
    [DbContext(typeof(CurrencyDbContext))]
    [Migration("20250117121427_Init migration")]
    partial class Initmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Cwiczenie4_KamilWolak.Domain.Entities.ExchangeTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("No")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Table")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ExchangeTables");
                });

            modelBuilder.Entity("Cwiczenie4_KamilWolak.Domain.Entities.Rate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ExchangeTableId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Mid")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("ExchangeTableId");

                    b.ToTable("Rates");
                });

            modelBuilder.Entity("Cwiczenie4_KamilWolak.Domain.Entities.Rate", b =>
                {
                    b.HasOne("Cwiczenie4_KamilWolak.Domain.Entities.ExchangeTable", "ExchangeTable")
                        .WithMany("Rates")
                        .HasForeignKey("ExchangeTableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExchangeTable");
                });

            modelBuilder.Entity("Cwiczenie4_KamilWolak.Domain.Entities.ExchangeTable", b =>
                {
                    b.Navigation("Rates");
                });
#pragma warning restore 612, 618
        }
    }
}
